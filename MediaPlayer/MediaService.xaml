<UserControl x:Class="MediaPlayer.MediaService"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MediaPlayer;assembly=MediaPlayer"
             xmlns:converter="clr-namespace:MediaPlayer.Converter"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             x:Name="MediaPlayerService"
             Loaded="MediaPlayerService_Loaded"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <converter:MediaStateConverter x:Key="MediaStateConverter"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Style/ButtonStyle.xaml"/>
                <ResourceDictionary Source="Style/SliderStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel
        DockPanel.Dock="Bottom" Height="100" Background="White">

        <DockPanel Height="20" LastChildFill="True" >
            <TextBlock DockPanel.Dock="Left"  Margin="10,0,10,0"
                       Text="{Binding MusicPlayerViewModel.Position, StringFormat={}{0:hh}:{0:mm}:{0:ss},
                FallbackValue=00:00:00, Mode=OneWay}">
            </TextBlock>
            <TextBlock DockPanel.Dock="Right" 
                       Margin="10, 0, 10, 0"
                       Text="{Binding MusicPlayerViewModel.TimeLeft, StringFormat={}{0:hh}:{0:mm}:{0:ss},
                FallbackValue=00:00:00, Mode=OneWay}">
            </TextBlock>

            <Slider Name="MediaSlider" TickFrequency="1"
                    Maximum="{Binding MusicPlayerViewModel.MediaMaximum.TotalMilliseconds, FallbackValue=1, Mode=OneWay}"
                    Minimum="0" Margin="5,0" 
                    Value="{Binding MusicPlayerViewModel.Progress, FallbackValue=1}"
                    IsMoveToPointEnabled="True" VerticalAlignment="Center"
                    PreviewMouseUp="MediaSlider_PreviewMouseUp"
                    PreviewMouseLeftButtonDown="MediaSlider_PreviewMouseLeftButtonDown"
                    ValueChanged="MediaSlider_ValueChanged">

                <Slider.Style>
                    <Style TargetType="Slider" BasedOn="{StaticResource Horizontal_Slider}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MusicPlayerViewModel.CurrentMedia}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Slider.Style>
            </Slider>
        </DockPanel>

        <Grid>
            <StackPanel Orientation="Horizontal">
                <Image Width="64" Height="64" Margin="8">
                    <Image.Clip>
                        <RectangleGeometry
                                    RadiusX="5"
                                    RadiusY="5"
                                    Rect="0,0,64,64"/>
                    </Image.Clip>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Setter Property="Source" Value="{Binding MusicPlayerViewModel.CurrentMedia.ArtCover, Mode=OneWay}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MusicPlayerViewModel.CurrentMedia.ArtCover}" Value="{x:Null}">
                                    <Setter Property="Source" Value="images/mp3.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MusicPlayerViewModel.CurrentMedia}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <TextBlock VerticalAlignment="Center">
                        <Run Text="{Binding MusicPlayerViewModel.CurrentMedia.Title, Mode=OneWay}"  FontWeight="Bold" FontSize="16"/>
                        <LineBreak/>
                        <Run Text="{Binding MusicPlayerViewModel.CurrentMedia.Artist, Mode=OneWay}"/>
                        <Run Text="•"/>
                        <Run Text="{Binding MusicPlayerViewModel.CurrentMedia.Album, Mode=OneWay}"/>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MusicPlayerViewModel.CurrentMedia}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"
                            Name="buttonHandling">
                <Button Name="shuffleButton" Width="30" Height="30" Margin="10"
                            Click="shuffleButton_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Shuffle,Size=25}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MusicPlayerViewModel.IsShuffling}" Value="True">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=ShuffleDisabled, Size=25}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Width="30" Height="30" Margin="10" Name="skipPreviousButton">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=SkipPrevious, Size=30}"/>
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MusicPlayerViewModel.CurrentMedia}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Name="playButton" Width="45" Height="45" Margin="10" 
                            Click="playButton_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource RoundButton}">
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="BorderThickness" Value="3" />
                            <Setter Property="BorderBrush" Value="SeaGreen"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Content" Value="{materialDesign:PackIcon Play, Size=30}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentState, Converter={StaticResource MediaStateConverter}}"
                                             Value="Play">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Pause, Size=30}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MusicPlayerViewModel.CurrentMedia}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Width="30" Height="30" Margin="10" VerticalAlignment="Center" 
                       Name="skipNextButton" HorizontalAlignment="Center" >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=SkipNext, Size=30}"/>
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MusicPlayerViewModel.CurrentMedia}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Name="replayButton" Width="30" Height="30" Margin="10"
                            Click="replayButton_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=RepeatOff,Size=25}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MusicPlayerViewModel.ReplayingFlag}" Value="{x:Static local:Constants.REPLAY_PLAYLIST}">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Repeat, Size=25}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MusicPlayerViewModel.ReplayingFlag}" Value="{x:Static local:Constants.REPLAY_SINGLE}">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=RepeatOne, Size=25}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"
                            Margin="10">
                <Button x:Name="recentlyPlayButton" Width="25" Height="25" Click="recentlyPlayButton_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=PlaylistMusicOutline,Size=20}"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Width="25" Height="25" Content="{materialDesign:PackIcon Kind=VolumeHigh}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                    </Button.Style>
                </Button>
                <Slider x:Name="volumeSlider" Width="100" 
                        VerticalAlignment="Center" Value="{Binding MusicPlayerViewModel.MediaElement.Volume, Mode=TwoWay}"
                        Maximum="1" Minimum="0" SmallChange="0.01" IsMoveToPointEnabled="True">
                    <Slider.Style>
                        <Style TargetType="Slider" BasedOn="{StaticResource Horizontal_Slider}">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="RepeatButton">
                                        <Border BorderThickness="0"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Slider.Style>
                </Slider>
            </StackPanel>
        </Grid>

        <MediaElement x:Name="MediaElement" Loaded="MediaElement_Loaded" />
    </StackPanel>
</UserControl>
